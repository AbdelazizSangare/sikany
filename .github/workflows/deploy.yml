name: Déploiement React + Node.js

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Cloner le repo
      uses: actions/checkout@v4

    - name: Installer Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Installer les dépendances Frontend
      working-directory: .
      run: |
        npm ci
        npm run build

    - name: Installer les dépendances Backend
      working-directory: backend
      run: |
        npm ci --production

    - name: Créer le fichier .env pour le backend
      working-directory: backend
      run: |
        cat << EOF > .env
        PORT=${{ secrets.BACKEND_PORT }}
        DB_HOST=${{ secrets.DB_HOST }}
        DB_USER=${{ secrets.DB_USER }}
        DB_PASS=${{ secrets.DB_PASS }}
        DB_NAME=${{ secrets.DB_NAME }}
        CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
        MAX_FILE_SIZE=2097152
        NODE_ENV=production
        EOF

    - name: Créer le fichier .env pour le frontend
      run: |
        cat << EOF > .env.production
        VITE_API_URL=${{ secrets.VITE_API_URL }}
        VITE_HOST_URL=${{ secrets.VITE_HOST_URL }}
        VITE_WEB3FORMS_KEY=${{ secrets.VITE_WEB3FORMS_KEY }}
        EOF

    - name: Préparer les fichiers pour le déploiement
      run: |
        # Créer la structure des dossiers
        mkdir -p deploy/public_html
        mkdir -p deploy/backend
        
        # Copier les fichiers frontend
        cp -r dist/* deploy/public_html/
        cp .env.production deploy/public_html/.env
        
        # Copier les fichiers backend
        cp -r backend/* deploy/backend/
        cp backend/.env deploy/backend/
        
        # Créer le fichier .htaccess pour le frontend
        cat << EOF > deploy/public_html/.htaccess
        RewriteEngine On
        RewriteBase /
        RewriteRule ^index\.html$ - [L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_FILENAME} !-l
        RewriteRule . /index.html [L]
        EOF
        
        # Créer le fichier .htaccess pour le backend
        cat << EOF > deploy/backend/.htaccess
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule ^(.*)$ app.js [QSA,L]
        EOF

    - name: Déployer via FTP
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.FTP_PASSWORD }}
        ARGS: "-avz --delete"
        SOURCE: "deploy/"
        REMOTE_HOST: ${{ secrets.FTP_HOST }}
        REMOTE_USER: ${{ secrets.FTP_USER }}
        TARGET: "/"

    - name: Nettoyer
      run: |
        rm -rf deploy
